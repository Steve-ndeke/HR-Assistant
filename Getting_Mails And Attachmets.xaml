<Activity mc:Ignorable="sap sap2010" x:Class="Getting_Mails_And_Attachmets" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_failure_Counter" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_Success_Counter" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_Signature" Type="OutArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_Total_Applications" Type="OutArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1413.6,3045.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Getting_Mails_And_Attachmets_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="37">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Business.ForEachMail</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="In this sequence the bot will loop through all emails containing any word like Application or Applying in the REFERENCE section&#xA;" DisplayName="Getting_Mails_And_Attachmets" sap:VirtualizedContainerService.HintSize="1424,2980.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="MailMessages" />
      <Variable x:TypeArguments="x:String" Name="Status" />
      <Variable x:TypeArguments="x:String" Name="Sender_Name" />
      <Variable x:TypeArguments="x:String" Name="Template1" />
      <Variable x:TypeArguments="x:String" Name="Sender_Address" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="testAttach" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1382.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Warn" Message="[&quot;Getting mails&quot;]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1382.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Warn" Message="[in_Config(&quot;OchestratorQueue&quot;).ToString]" />
    <TryCatch sap2010:Annotation.AnnotationText="i have placed this activity in the Try catch so that any erros coming from the same can be handled" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1382.4,335.2" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:GetOutlookMailMessages Account="{x:Null}" Filter="{x:Null}" FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Outlook Mail Messages" GetAttachements="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_2" MailFolder="Inbox\Applications" MarkAsRead="False" Messages="[testAttach]" OnlyUnreadMessages="True" OrderByDate="NewestFirst" Top="10" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:Annotation.AnnotationText="In case of any error the bot will send an error message to the developer" sap:VirtualizedContainerService.HintSize="425.6,626.4" sap2010:WorkflowViewState.IdRef="Sequence_22">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="VarMail1" />
                <Variable x:TypeArguments="s:Exception" Name="Var1_Exception" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReadTextFile sap2010:Annotation.AnnotationText="Here the bot reads this template which explains the mail format." Content="[VarMail1]" DisplayName="Read Text File" FileName="Data\Exception_Mail.txt" sap:VirtualizedContainerService.HintSize="384,112" sap2010:WorkflowViewState.IdRef="ReadTextFile_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ReadTextFile>
              <Assign sap2010:Annotation.AnnotationText="Here I have created a variable that will carry the Exception message so that am able to pass it to the  mail body" sap:VirtualizedContainerService.HintSize="384,120" sap2010:WorkflowViewState.IdRef="Assign_16">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[Var1_Exception]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="This is send mail acticity where we pass the template, the variable holding the exception and the signature ." Body="[String.Format(VarMail1,Var1_Exception,out_Signature)]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="384,190.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_4" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="ERROR" To="[in_Config(&quot;HR_Mail_Address&quot;).ToString]">
                <ui:SendOutlookMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                </ui:SendOutlookMail.Files>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:SendOutlookMail>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1382.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Warn" Message="[&quot;Getting in the loop&quot;]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1382.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Warn" Message="[testAttach.Count.ToString]" />
    <Assign sap:VirtualizedContainerService.HintSize="1382.4,60" sap2010:WorkflowViewState.IdRef="Assign_17">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[out_Total_Applications]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[testAttach.Count]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Here the bot is now ready to loop through the mails. Note that the outlook mail activity has the variable testAttch&#xD;&#xA;" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1382.4,1704.8" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[testAttach]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="Mail" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Looping Through the Mails" sap:VirtualizedContainerService.HintSize="1347.2,1536" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="Attachment" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1305.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Warn" Message="[&quot;Saving attachment&quot;]" />
            <If sap2010:Annotation.AnnotationText="Check if the mail contains something like an Application in the subject section." Condition="[mail.Subject.ToLower.Contains(&quot;application&quot;) or mail.Subject.ToLower.Contains(&quot;applying&quot;)]" DisplayName="If the Mail contains Application in the Ref" sap:VirtualizedContainerService.HintSize="1305.6,1310.4" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Sequence for saving attachments in the mails with Application in Ref" sap:VirtualizedContainerService.HintSize="886.4,1120" sap2010:WorkflowViewState.IdRef="Sequence_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If sap2010:Annotation.AnnotationText="check whether the attchment has .pdf extension since in this project is required." Condition="[Mail.Attachments.Where(Function(x) x.Name.EndsWith(“pdf”)).Count &gt; 0]" DisplayName="If the mail contains  an attachment that has a .pdf extension" sap:VirtualizedContainerService.HintSize="844.8,1027.2" sap2010:WorkflowViewState.IdRef="If_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap2010:Annotation.AnnotationText="this sequence will save the mails attchments with the .pdf extension" sap:VirtualizedContainerService.HintSize="375.2,594.4" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="Template_Exists" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SaveMailAttachments sap2010:Annotation.AnnotationText="this activity saves the attachment in the required path location" Attachments="[Attachment]" DisplayName="Save Attachments" FolderPath="[in_Config(&quot;Attachment_Folder_Path&quot;).ToString]" sap:VirtualizedContainerService.HintSize="333.6,132" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_2" Message="[Mail]" OverwriteExisting="False">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SaveMailAttachments>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Warn" Message="[Attachment(0)]" />
                        <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Status]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Success</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_21">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[out_Success_Counter]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[out_Success_Counter + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:Annotation.AnnotationText="If the attachment does not meet the requirements then the sender is informed in this sequence" sap:VirtualizedContainerService.HintSize="425.6,836.8" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="No_Attachment" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Sender_Address]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Mail.From.Address]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_Signature]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">HR Assistant</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Sender_Name]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Mail.Sender.DisplayName.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ReadTextFile Content="[No_Attachment]" DisplayName="Read Text File" FileName="[in_Config(&quot;No_Attachment_Mail_Template_ path&quot;).ToString]" sap:VirtualizedContainerService.HintSize="384,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
                        <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[String.Format(No_Attachment,Sender_Name,out_Signature)]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="384,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="Please Attach your resume and convert it to pdf" To="[Sender_Address]">
                          <ui:SendOutlookMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                              <InArgument x:TypeArguments="x:String">C:\Users\Admin\Documents\UiPath\HR_ASSISTANT\Data\First Name.docx</InArgument>
                            </scg:List>
                          </ui:SendOutlookMail.Files>
                        </ui:SendOutlookMail>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="384,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Warn" Message="[&quot;Not applicable&quot;]" />
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="375.2,285.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[out_failure_Counter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[out_failure_Counter + 1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Not Application Email&quot;]" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1382.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;We good&quot;]" />
  </Sequence>
</Activity>